"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[24592],{88324:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>_,frontMatter:()=>t,metadata:()=>r,toc:()=>c});var i=s(85893),a=s(11151);const t={title:"Tag 8",tags:["M141","Tag 8","Datenbanksysteme","Stored Procedures","Views","Triggers"]},l="Tag 8",r={id:"M141/tag-0008",title:"Tag 8",description:"1 Dokumentationsauftr\xe4ge",source:"@site/docs/M141/tag-0008.md",sourceDirName:"M141",slug:"/M141/tag-0008",permalink:"/docs/M141/tag-0008",draft:!1,unlisted:!1,tags:[{label:"M141",permalink:"/docs/tags/m-141"},{label:"Tag 8",permalink:"/docs/tags/tag-8"},{label:"Datenbanksysteme",permalink:"/docs/tags/datenbanksysteme"},{label:"Stored Procedures",permalink:"/docs/tags/stored-procedures"},{label:"Views",permalink:"/docs/tags/views"},{label:"Triggers",permalink:"/docs/tags/triggers"}],version:"current",frontMatter:{title:"Tag 8",tags:["M141","Tag 8","Datenbanksysteme","Stored Procedures","Views","Triggers"]},sidebar:"tutorialSidebar",previous:{title:"Tag 7",permalink:"/docs/M141/tag-0007"},next:{title:"Tag 9",permalink:"/docs/M141/tag-0009"}},d={},c=[{value:"1 Dokumentationsauftr\xe4ge",id:"1-dokumentationsauftr\xe4ge",level:2},{value:"1.1 \xdcbungsdokuemntation Sakila",id:"11-\xfcbungsdokuemntation-sakila",level:3},{value:"1.1.1 SPs, Views, Triggers anzeigen und anwenden",id:"111-sps-views-triggers-anzeigen-und-anwenden",level:4},{value:"1.1.2 SPs, Views, Triggers Import(Create)-Befehle dokumentiert",id:"112-sps-views-triggers-importcreate-befehle-dokumentiert",level:4},{value:"1.2 \xdcbungsdokuemntation Chat-Applikation",id:"12-\xfcbungsdokuemntation-chat-applikation",level:3},{value:"1.2.1 SPs, Views anwenden (erstellen und aus der Applikation verwenden)",id:"121-sps-views-anwenden-erstellen-und-aus-der-applikation-verwenden",level:4}];function o(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"tag-8",children:"Tag 8"}),"\n",(0,i.jsx)(n.h2,{id:"1-dokumentationsauftr\xe4ge",children:"1 Dokumentationsauftr\xe4ge"}),"\n",(0,i.jsx)(n.h3,{id:"11-\xfcbungsdokuemntation-sakila",children:"1.1 \xdcbungsdokuemntation Sakila"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://downloads.mysql.com/docs/sakila-db.zip",children:"Sakila-DB herunterladen"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Struktur und Daten importieren"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"sudo mysql < sakila-schema.sql\nsudo mysql < sakila-data.sql\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Datenbank testen"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"USE sakilla;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SHOW FULL TABLES;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"----------------------------+------------+\n| Tables_in_sakila           | Table_type |\n+----------------------------+------------+\n| actor                      | BASE TABLE |\n| actor_info                 | VIEW       |\n| address                    | BASE TABLE |\n| category                   | BASE TABLE |\n| city                       | BASE TABLE |\n| country                    | BASE TABLE |\n| customer                   | BASE TABLE |\n| customer_list              | VIEW       |\n| film                       | BASE TABLE |\n| film_actor                 | BASE TABLE |\n| film_category              | BASE TABLE |\n| film_list                  | VIEW       |\n| film_text                  | BASE TABLE |\n| inventory                  | BASE TABLE |\n| language                   | BASE TABLE |\n| nicer_but_slower_film_list | VIEW       |\n| payment                    | BASE TABLE |\n| rental                     | BASE TABLE |\n| sales_by_film_category     | VIEW       |\n| sales_by_store             | VIEW       |\n| staff                      | BASE TABLE |\n| staff_list                 | VIEW       |\n| store                      | BASE TABLE |\n+----------------------------+------------+\n23 rows in set (0.00 sec)\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT COUNT(*) FROM film;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"+----------+\n| COUNT(*) |\n+----------+\n|     1000 |\n+----------+\n1 row in set (0.06 sec)\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT COUNT(*) FROM film_text;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"+----------+\n| COUNT(*) |\n+----------+\n|     1000 |\n+----------+\n1 row in set (0.00 sec)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"111-sps-views-triggers-anzeigen-und-anwenden",children:"1.1.1 SPs, Views, Triggers anzeigen und anwenden"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Zeigen Sie alle Views der Datenbank sakila an:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SHOW FULL TABLES WHERE table_type = 'VIEW';\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"+----------------------------+------------+\n| Tables_in_sakila           | Table_type |\n+----------------------------+------------+\n| actor_info                 | VIEW       |\n| customer_list              | VIEW       |\n| film_list                  | VIEW       |\n| nicer_but_slower_film_list | VIEW       |\n| sales_by_film_category     | VIEW       |\n| sales_by_store             | VIEW       |\n| staff_list                 | VIEW       |\n+----------------------------+------------+\n7 rows in set (0.00 sec)\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Zeigen Sie alle Stored Procedures der Datenbank sakila an:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SHOW PROCEDURE STATUS WHERE db = 'sakila';\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"+--------+-------------------+-----------+----------------+---------------------+---------------------+---------------+--------------------------------------------------+----------------------+----------------------+--------------------+\n| Db     | Name              | Type      | Definer        | Modified            | Created             | Security_type | Comment                                          | character_set_client | collation_connection | Database Collation |\n+--------+-------------------+-----------+----------------+---------------------+---------------------+---------------+--------------------------------------------------+----------------------+----------------------+--------------------+\n| sakila | film_in_stock     | PROCEDURE | root@localhost | 2023-04-19 11:10:08 | 2023-04-19 11:10:08 | DEFINER       |                                                  | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| sakila | film_not_in_stock | PROCEDURE | root@localhost | 2023-04-19 11:10:08 | 2023-04-19 11:10:08 | DEFINER       |                                                  | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| sakila | rewards_report    | PROCEDURE | root@localhost | 2023-04-19 11:10:08 | 2023-04-19 11:10:08 | DEFINER       | Provides a customizable report on best customers | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n+--------+-------------------+-----------+----------------+---------------------+---------------------+---------------+--------------------------------------------------+----------------------+----------------------+--------------------+\n3 rows in set (0.01 sec)\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Zeigen Sie alle Triggers der Datenbank sakila an:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SHOW TRIGGERS IN sakila;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',childrenn| Trigger              | Event  | Table    | Statement                                                                                                                                                                                                                                                                                                              | Timing | Created                | sql_mode                                                                                                                         | Definer        | character_set_client | collation_connection | Database Collation |\nn| customer_create_date | INSERT | customer | SET NEW.create_date = NOW()                                                                                                                                                                                                                                                                                            | BEFORE | 2023-04-19 11:10:12.03 | STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_ENGINE_SUBSTITUTION | root@localhost | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| ins_film             | INSERT | film     | BEGIN\n    INSERT INTO film_text (film_id, title, description)\n        VALUES (new.film_id, new.title, new.description);\n  END                                                                                                                                                                                          | AFTER  | 2023-04-19 11:10:07.07 | STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_ENGINE_SUBSTITUTION | root@localhost | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| upd_film             | UPDATE | film     | BEGIN\n    IF (old.title != new.title) OR (old.description != new.description) OR (old.film_id != new.film_id)\n    THEN\n        UPDATE film_text\n            SET title=new.title,\n                description=new.description,\n                film_id=new.film_id\n        WHERE film_id=old.film_id;\n    END IF;\n  END | AFTER  | 2023-04-19 11:10:07.10 | STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_ENGINE_SUBSTITUTION | root@localhost | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| del_film             | DELETE | film     | BEGIN\n    DELETE FROM film_text WHERE film_id = old.film_id;\n  END                                                                                                                                                                                                                                                     | AFTER  | 2023-04-19 11:10:07.12 | STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_ENGINE_SUBSTITUTION | root@localhost | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| payment_date         | INSERT | payment  | SET NEW.payment_date = NOW()                                                                                                                                                                                                                                                                                           | BEFORE | 2023-04-19 11:10:13.93 | STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_ENGINE_SUBSTITUTION | root@localhost | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\n| rental_date          | INSERT | rental   | SET NEW.rental_date = NOW()                                                                                                                                                                                                                                                                                            | BEFORE | 2023-04-19 11:10:14.97 | STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_ENGINE_SUBSTITUTION | root@localhost | utf8mb4              | utf8mb4_0900_ai_ci   | utf8mb4_0900_ai_ci |\nn6 rows in set (0.04 sec)\n"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Alle Stored Procedures, alle Views und Triggers sind in der Datei ",(0,i.jsx)(n.code,{children:"sakila-data.sql"})," definiert"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"112-sps-views-triggers-importcreate-befehle-dokumentiert",children:"1.1.2 SPs, Views, Triggers Import(Create)-Befehle dokumentiert"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Dokumentieren Sie den Create-Befehl der Stored Procedures ",(0,i.jsx)(n.code,{children:"film_in_stock"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SHOW CREATE PROCEDURE film_in_stock;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"...\nBEGIN\n     SELECT inventory_id\n     FROM inventory\n     WHERE film_id = p_film_id\n     AND store_id = p_store_id\n     AND inventory_in_stock(inventory_id);\n\n     SELECT COUNT(*)\n     FROM inventory\n     WHERE film_id = p_film_id\n     AND store_id = p_store_id\n     AND inventory_in_stock(inventory_id)\n     INTO p_film_count;\nEND\n...\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Diese SP sucht nach der ",(0,i.jsx)(n.code,{children:"inventory_id"}),", wo die Film und Store ID mit der \xfcbergebenen \xfcbereinstimmt, indem sie die Funktion ",(0,i.jsx)(n.code,{children:"inventory_in_stock"})," verwendet, um zu \xfcberpr\xfcfen, ob das Inventar in dem angegebenen Lagerbestand vorhanden ist. Wenn das Inventar gefunden wird, wird die Anzahl der verf\xfcgbaren Einheiten in der Variable ",(0,i.jsx)(n.code,{children:"p_film_count"})," gespeichert."]}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Dokumentieren Sie den Create-Befehl der View ",(0,i.jsx)(n.code,{children:"actor_info"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SHOW CREATE VIEW actor_info;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"...\nCREATE ALGORITHM = UNDEFINED DEFINER = `root` @`localhost` SQL SECURITY INVOKER VIEW `actor_info` AS\nselect\n  `a`.`actor_id` AS `actor_id`,\n  `a`.`first_name` AS `first_name`,\n  `a`.`last_name` AS `last_name`,\n  group_concat(\n    distinct concat(\n      `c`.`name`,\n      ': ',\n      (\n        select\n          group_concat(\n            `f`.`title`\n            order by\n              `f`.`title` ASC separator ', '\n          )\n        from\n          (\n            (\n              `film` `f`\n              join `film_category` `fc` on(\n                (`f`.`film_id` = `fc`.`film_id`)\n              )\n            )\n            join `film_actor` `fa` on(\n              (`f`.`film_id` = `fa`.`film_id`)\n            )\n          )\n        where\n          (\n            (\n              `fc`.`category_id` = `c`.`category_id`\n            )\n            and (`fa`.`actor_id` = `a`.`actor_id`)\n          )\n      )\n    )\n    order by\n      `c`.`name` ASC separator '; '\n  ) AS `film_info`\nfrom\n  (\n    (\n      (\n        `actor` `a`\n        left join `film_actor` `fa` on(\n          (`a`.`actor_id` = `fa`.`actor_id`)\n        )\n      )\n      left join `film_category` `fc` on(\n        (`fa`.`film_id` = `fc`.`film_id`)\n      )\n    )\n    left join `category` `c` on(\n      (\n        `fc`.`category_id` = `c`.`category_id`\n      )\n    )\n  )\ngroup by\n  `a`.`actor_id`,\n  `a`.`first_name`,\n  `a`.`last_name`\n...\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Diese View kombiniert Informationen \xfcber Schauspieler, Filme und Kategorien, um eine Tabelle zu erstellen, die detaillierte Informationen \xfcber jeden Schauspieler und seine Filme enth\xe4lt. Die Informationen werden in der Spalte ",(0,i.jsx)(n.code,{children:"film_info"})," durch die Funktion ",(0,i.jsx)(n.code,{children:"group_concat"})," kombiniert. Durch das ",(0,i.jsx)(n.code,{children:"group by"})," nach ",(0,i.jsx)(n.code,{children:"actor_id"}),", ",(0,i.jsx)(n.code,{children:"first_name"})," und ",(0,i.jsx)(n.code,{children:"last_name"})," wird sichergestellt, dass jeder Schauspieler in der Tabelle nur einmal aufgef\xfchrt wird. Die View kann wie folgt aufgerufen werden:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM actor_info;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"12-\xfcbungsdokuemntation-chat-applikation",children:"1.2 \xdcbungsdokuemntation Chat-Applikation"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Repo von ",(0,i.jsx)(n.a,{href:"https://github.com/psachan190/realtime-chat-application-using-nodejs-expressjs-and-web-socket.git",children:"GitHub"})," herunterladen."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"NPM-Dependencies installieren"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"cd realtime-chat-application-using-nodejs-expressjs-and-web-socket\nnpm install\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Datenbank erstellen"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE DATABASE chat;\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Benutzerinformation in ",(0,i.jsx)(n.code,{children:"database/db.js"})," anpassen"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Applikation per ",(0,i.jsx)(n.code,{children:"node server.js"})," starten"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Ein User welcher \xfcber ",(0,i.jsx)(n.code,{children:"mysql_native_password"})," identifiziert wird ist n\xf6tig!",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"https://dba.stackexchange.com/questions/209514/what-is-mysql-native-password",children:"Link"})]})}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsx)(n.li,{children:"Erstellen Sie zwei Logins in der Datenbank"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"INSERT INTO login VALUES ('1','user1','user1');\nINSERT INTO login VALUES ('2','user2','user2');\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"7",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"http://localhost:3000"})," in ZWEI Browsern \xf6ffnen und mit ",(0,i.jsx)(n.code,{children:"user1"})," und ",(0,i.jsx)(n.code,{children:"user2"})," anmelden"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Chat App Login",src:s(37205).Z+"",width:"2486",height:"1225"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Chat App Messages",src:s(23591).Z+"",width:"2486",height:"1225"})}),"\n",(0,i.jsx)(n.h4,{id:"121-sps-views-anwenden-erstellen-und-aus-der-applikation-verwenden",children:"1.2.1 SPs, Views anwenden (erstellen und aus der Applikation verwenden)"}),"\n",(0,i.jsxs)(n.p,{children:["Aktueller SQL-Code in ",(0,i.jsx)(n.code,{children:"server.js"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'var sql = "SELECT * FROM message ";\n...\nvar sql = "INSERT INTO message (message , user) VALUES (\'" + data+ "\' , \'"+user+"\')";\n...\nvar sql = "SELECT * FROM login WHERE username=\'" + username+"\'";\n'})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"F\xfchren Sie f\xfcr die Applikation eine Stored-Procedures und eine View ein."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="Message View erstellen"',children:"CREATE VIEW view_messages AS\nSELECT * FROM message;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="Stored Procedure erstellen"',children:"DELIMITER //\nCREATE PROCEDURE insertMessage (IN messageParam VARCHAR(2550), IN userParam VARCHAR(250))\nBEGIN\nINSERT INTO message (message , user) VALUES (messageParam,userParam);\nEND;\n//\nDELIMITER ;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="Login View erstellen"',children:"CREATE VIEW view_logins AS\nSELECT * FROM login;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="Message View testen"',children:"SELECT * FROM view_messages;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"+----+----------------------+-------+\n| id | message              | user  |\n+----+----------------------+-------+\n|  1 | Hallo, ich bin User1 | user1 |\n|  2 | Hallo, ich bin User2 | user2 |\n+----+----------------------+-------+\n2 rows in set (0.00 sec)\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="Stored Procedure testen"',children:'CALL insertMessage("TEST","user1");\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Die Message sollte nach einem Reload im Browser angezeigt werden."})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="Login View testen"',children:"SELECT * FROM view_logins;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="OUTPUT"',children:"+----+----------+----------+\n| id | username | password |\n+----+----------+----------+\n|  1 | user1    | user1    |\n|  2 | user2    | user2    |\n+----+----------+----------+\n2 rows in set (0.00 sec)\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Passen Sie die Applikation entsprechend an und testen Sie sie aus"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:'var sql = "SELECT * FROM view_messages ";\n...\nvar sql = "CALL insertMessage(\'" + data+ "\',\'"+user+"\')";\n...\nvar sql = "SELECT * FROM view_logins WHERE username=\'" + username+"\'";\n'})}),"\n",(0,i.jsx)(n.p,{children:"Nachdem neustarten der Applikation, sollte immer noch alles funktionieren."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Chat App mit SP und Views",src:s(27350).Z+"",width:"2486",height:"1225"})})]})}function _(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},37205:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/chat_app_login-de9d174ea24b19385159bcb569641121.png"},23591:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/chat_app_messages-3afd15f6916c047d99f10f5a129daef2.png"},27350:(e,n,s)=>{s.d(n,{Z:()=>i});const i=s.p+"assets/images/chat_app_mit_sp_view-7a90c15e1ad45a52bf69a3f6449cba8b.png"},11151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>l});var i=s(67294);const a={},t=i.createContext(a);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);