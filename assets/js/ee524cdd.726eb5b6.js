"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3764],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=s(n),g=o,m=c["".concat(l,".").concat(g)]||c[g]||d[g]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[c]="string"==typeof e?e:o,i[1]=u;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},58234:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={title:"Tag 11",tags:["M141","Tag 11","MongoDB","Import/Export/Backup/Restore und Queries"]},i="Tag 11",u={unversionedId:"M141/tag-0011",id:"M141/tag-0011",title:"Tag 11",description:"1 Dokumentationsauftr\xe4ge",source:"@site/docs/M141/tag-0011.md",sourceDirName:"M141",slug:"/M141/tag-0011",permalink:"/docs/M141/tag-0011",draft:!1,tags:[{label:"M141",permalink:"/docs/tags/m-141"},{label:"Tag 11",permalink:"/docs/tags/tag-11"},{label:"MongoDB",permalink:"/docs/tags/mongo-db"},{label:"Import/Export/Backup/Restore und Queries",permalink:"/docs/tags/import-export-backup-restore-und-queries"}],version:"current",frontMatter:{title:"Tag 11",tags:["M141","Tag 11","MongoDB","Import/Export/Backup/Restore und Queries"]},sidebar:"tutorialSidebar",previous:{title:"Tag 10",permalink:"/docs/M141/tag-0010"},next:{title:"Tag 12",permalink:"/docs/M141/tag-0012"}},l={},s=[{value:"1 Dokumentationsauftr\xe4ge",id:"1-dokumentationsauftr\xe4ge",level:2},{value:"1.1 Dokumentation zur \xdcbung &quot;Import/Export/Backup/Restore und Queries&quot;",id:"11-dokumentation-zur-\xfcbung-importexportbackuprestore-und-queries",level:3},{value:"1.1.1 Import",id:"111-import",level:4},{value:"1.1.2 Queries",id:"112-queries",level:4},{value:"1.1.3 Aggregate",id:"113-aggregate",level:4},{value:"1.1.4 Sort",id:"114-sort",level:4},{value:"1.1.5 Backup und Restore",id:"115-backup-und-restore",level:4}],p={toc:s},c="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(c,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tag-11"},"Tag 11"),(0,o.kt)("h2",{id:"1-dokumentationsauftr\xe4ge"},"1 Dokumentationsauftr\xe4ge"),(0,o.kt)("h3",{id:"11-dokumentation-zur-\xfcbung-importexportbackuprestore-und-queries"},'1.1 Dokumentation zur \xdcbung "Import/Export/Backup/Restore und Queries"'),(0,o.kt)("h4",{id:"111-import"},"1.1.1 Import"),(0,o.kt)("p",null,(0,o.kt)("a",{target:"_blank",href:n(62643).Z},"Mongo Cities 1000")," importieren"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mongodb"},"mongoimport --db=cities --collection=cities --file=mongo_cities1000.json\n")),(0,o.kt)("h4",{id:"112-queries"},"1.1.2 Queries"),(0,o.kt)("p",null,'Listen Sie alle St\xe4dte aus der Timezone "Europa" (alle Zeitzonen von Europa) auf.'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mongodb"},'db.cities.find({\n  timezone:{\n    $regex:"Europe"\n  }\n},\n{\n  _id:0,\n  name:1\n})\n')),(0,o.kt)("h4",{id:"113-aggregate"},"1.1.3 Aggregate"),(0,o.kt)("p",null,"F\xfchren Sie die folgende Query auf Ihrer Datenbank aus:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mongodb"},"db.cities.aggregate([\n    {\n    $match: {\n        'timezone': {\n        $eq: 'Europe/London'\n        }\n    }\n    },\n    {\n    $group: {\n        _id: 'averagePopulation',\n        avgPop: {\n        $avg: '$population'\n        }\n    }\n    }\n])\n")),(0,o.kt)("p",null,"Was macht die Query?"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'Zuerst werden alle Objekte mit der Zeitzone "Europe/London" gesucht. Anschliessend wird ein Durchschnitt von der Population mit der ID ',(0,o.kt)("inlineCode",{parentName:"p"},"averagePopulation")," erstellt.")),(0,o.kt)("h4",{id:"114-sort"},"1.1.4 Sort"),(0,o.kt)("p",null,"F\xfchren Sie die folgende Query auf Ihrer Datenbank aus:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mongodb"},"db.cities.aggregate([\n    {\n    $match: {\n        'timezone': {\n        $eq: 'Europe/London'\n        }\n    }\n    },\n    {\n    $sort: {\n        population: -1\n    }\n    },\n    {\n    $project: {\n        _id: 0,\n        name: 1,\n        population: 1\n    }\n    }\n])\n")),(0,o.kt)("p",null,"Was macht die Query?"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'Zuerst werden wieder alle Objekte mit der Zeitzone "Europe/London" gesucht. Anschliessend wird die Population absteigend (',(0,o.kt)("inlineCode",{parentName:"p"},"-1")," = Absteigend, ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," = Aufsteigend)")),(0,o.kt)("h4",{id:"115-backup-und-restore"},"1.1.5 Backup und Restore"),(0,o.kt)("p",null,"F\xfchren Sie von Hand (oder \xfcber Bash-Script) ein Backup und ein Restore f\xfcr Ihre Testdatenbank durch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mongodb",metastring:'title="Backup"',title:'"Backup"'},"mongodump --archive=cities.20230603.archive --db=cities\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mongodb",metastring:'title="Restore"',title:'"Restore"'},'mongorestore --archive=cities.20230603.archive --nsFrom="cities.*" --nsTo="cities2.*"\n')),(0,o.kt)("p",null,"Um einen Klon in einem Befehl zu erstellen kann folgender Befehl genutzt werden."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-mongodb",metastring:'title="Klon"',title:'"Klon"'},'mongodump --archive --db=cities | mongorestore --archive --nsFrom="cities.*" --nsTo="cities2.*"\n')))}d.isMDXComponent=!0},62643:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/mongo_cities1000-7294115c8d5d53fa46fb288e8a0daa68.json"}}]);