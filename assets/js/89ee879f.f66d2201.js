"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[98800],{54470:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var a=n(85893),s=n(11151);const r={},i="ELK.sh",l={id:"M182/ELK_sh",title:"ELK.sh",description:"",source:"@site/appendix/M182/ELK_sh.md",sourceDirName:"M182",slug:"/M182/ELK_sh",permalink:"/appendix/M182/ELK_sh",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Art. 9 VDSG (Stand: 1. Dezember 2010)",permalink:"/appendix/M143/art_9_vdsg"},next:{title:"apt list --installed",permalink:"/appendix/M182/apt_installed"}},c={},o=[];function d(e){const t={code:"code",h1:"h1",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"elksh",children:"ELK.sh"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-sh",children:'#!/bin/bash\n\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\necho "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list\necho "deb [arch=amd64] https://packages.elastic.co/curator/5/debian stable main" | sudo tee -a /etc/apt/sources.list.d/curator-5.list\napt-get -qq update\napt-get -qq install elasticsearch -y # 1st install elasticseatch to get JDK\nexport JAVA_HOME=/usr/share/elasticsearch/jdk && echo export JAVA_HOME=/usr/share/elasticsearch/jdk >>/etc/bash.bashrc\napt-get -qq install kibana filebeat auditbeat elasticsearch-curator -y\n\ncat >/etc/cron.daily/curator <<EOF\n#!/bin/sh\ncurator_cli --host 192.168.38.105 delete_indices --filter_list \'{"filtertype": "age", "source": "name", "timestring": "%Y.%m.%d", "unit": "days", "unit_count": 1, "direction": "older"}\'  > /dev/null 2>&1\nEOF\nchmod +x /etc/cron.daily/curator\n\nprintf vagrant | /usr/share/elasticsearch/bin/elasticsearch-keystore add -x "bootstrap.password" -f\n/usr/share/elasticsearch/bin/elasticsearch-users useradd vagrant -p vagrant -r superuser\n\ncat >/etc/elasticsearch/elasticsearch.yml <<EOF\nnetwork.host: _eth1:ipv4_\ndiscovery.type: single-node\ncluster.name: cydef-es-cluster\nnode.name: \\${HOSTNAME}\npath.data: /var/lib/elasticsearch\npath.logs: /var/log/elasticsearch\nxpack.security.enabled: true\nxpack.security.authc:\n        api_key.enabled: true\n        anonymous:\n                username: anonymous\n                roles: superuser\n                authz_exception: false\nEOF\n\ncat >/etc/default/elasticsearch <<EOF\nES_PATH_CONF=/etc/elasticsearch\nES_STARTUP_SLEEP_TIME=5\nMAX_OPEN_FILES=65536\nMAX_LOCKED_MEMORY=unlimited\nEOF\n\nmkdir /etc/systemd/system/elasticsearch.service.d/\ncat >/etc/systemd/system/elasticsearch.service.d/override.conf <<EOF\n[Service]\nLimitMEMLOCK=infinity\nEOF\n\ncat >/etc/security/limits.conf <<EOF\nelasticsearch soft nofile 65536\nelasticsearch hard nofile 65536\nelasticsearch soft memlock unlimited\nelasticsearch hard memlock unlimited\nEOF\n\n/bin/systemctl daemon-reload\n/bin/systemctl enable elasticsearch.service\n/bin/systemctl start elasticsearch.service\n\n#kibana\ntouch /var/log/kibana.log\nchown kibana:kibana /var/log/kibana.log\ncat >/etc/kibana/kibana.yml <<EOF\nserver.host: "192.168.38.105"\nelasticsearch.hosts: ["http://192.168.38.105:9200"]\nlogging.dest: "/var/log/kibana.log"\nkibana.defaultAppId: "discover"\ntelemetry.enabled: false\ntelemetry.optIn: false\nnewsfeed.enabled: false\nxpack.security.enabled: true\nxpack.ingestManager.fleet.tlsCheckDisabled: true\nxpack.encryptedSavedObjects.encryptionKey: \'fhjskloppd678ehkdfdlliverpoolfcr\'\nEOF\n\n/bin/systemctl enable kibana.service\n/bin/systemctl start kibana.service\n\ncat >/etc/filebeat/filebeat.yml <<EOF\nfilebeat.inputs:\n- type: log\n  enabled: false\n  paths:\n    - /var/log/auth.log\n    - /var/log/syslog\n\nfilebeat.config.modules:\n  path: \\${path.config}/modules.d/*.yml\n  reload.enabled: true\n  reload.period: 10s\n\nsetup.kibana:\n  host: "192.168.38.105:5601"\n  username: vagrant\n  password: vagrant\n\nsetup.dashboards.enabled: true\nsetup.ilm.enabled: false\n\noutput.elasticsearch:\n  hosts: ["192.168.38.105:9200"]\nEOF\n\ncat >/etc/filebeat/modules.d/osquery.yml.disabled <<EOF\n- module: osquery\n  result:\n    enabled: true\n\n    # Set custom paths for the log files. If left empty,\n    # Filebeat will choose the paths depending on your OS.\n    var.paths: ["/var/log/kolide/osquery_result"]\nEOF\nfilebeat --path.config /etc/filebeat modules enable osquery\n\ncat >/etc/auditbeat/auditbeat.yml <<EOF\nauditbeat.config.modules:\n  path: \\${path.config}/modules.d/*.yml\n  reload.period: 10s\n  reload.enabled: true\nauditbeat.max_start_delay: 10s\n\nauditbeat.modules:\n- module: auditd\n  audit_rule_files: [ \'\\${path.config}/audit.rules.d/*.conf\' ]\n  audit_rules: |\n- module: file_integrity\n  paths:\n  - /bin\n  - /usr/bin\n  - /sbin\n  - /usr/sbin\n  - /etc\n- module: system\n  state.period: 12h\n  user.detect_password_changes: true\n  login.wtmp_file_pattern: /var/log/wtmp*\n  login.btmp_file_pattern: /var/log/btmp*\nsetup.template.settings:\n  index.number_of_shards: 1\nsetup.kibana:\n  host: "192.168.38.105:5601"\n  username: vagrant\n  password: vagrant\n\nsetup.dashboards.enabled: true\nsetup.ilm.enabled: false\n\noutput.elasticsearch:\n  hosts: ["192.168.38.105:9200"]\nprocessors:\n  - add_host_metadata: ~\n  - add_cloud_metadata: ~\n  - add_docker_metadata: ~\nEOF\nmv /etc/auditbeat/audit.rules.d/sample-rules.conf.disabled /etc/auditbeat/audit.rules.d/sample-rules.conf\n\nmkdir /var/log/bro/\nln -s /opt/zeek/logs/current/ /var/log/bro/current\nfilebeat --path.config /etc/filebeat modules enable zeek\n\nfilebeat --path.config /etc/filebeat modules enable suricata\n\n# make sure kibana is up and running\necho "Waiting for Kibana to be up..."\nwhile true; do\n  result=$(curl -uvagrant:vagrant --silent 192.168.38.105:5601/api/status)\n  if echo $result | grep -q logger; then break; fi\n  sleep 1\ndone\n/bin/systemctl enable filebeat.service\n/bin/systemctl start filebeat.service\n\n/bin/systemctl enable auditbeat.service\n/bin/systemctl start auditbeat.service\n\n# load SIEM prebuilt rules\necho "Load SIEM prebuilt rules"\ncurl -s -uvagrant:vagrant -XPOST "192.168.38.105:5601/api/detection_engine/index" -H \'kbn-xsrf: true\' -H \'Content-Type: application/json\'\ncurl -s -uvagrant:vagrant -XPUT "192.168.38.105:5601/api/detection_engine/rules/prepackaged" -H \'kbn-xsrf: true\' -H \'Content-Type: application/json\'\n\n# Enable elasticsearch trial\n# echo "Enable elastic trial version"\n# curl -s -XPOST "192.168.38.105:9200/_license/start_trial?acknowledge=true&pretty"\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>i});var a=n(67294);const s={},r=a.createContext(s);function i(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);