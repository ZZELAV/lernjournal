"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2531],{3905:(e,t,n)=>{n.d(t,{Zo:()=>k,kt:()=>g});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),u=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},k=function(e){var t=u(e.components);return i.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},l=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,k=o(e,["components","mdxType","originalType","parentName"]),d=u(n),l=r,g=d["".concat(c,".").concat(l)]||d[l]||p[l]||a;return n?i.createElement(g,s(s({ref:t},k),{},{components:n})):i.createElement(g,s({ref:t},k))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=l;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var u=2;u<a;u++)s[u]=n[u];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}l.displayName="MDXCreateElement"},82106:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var i=n(87462),r=(n(67294),n(3905));const a={},s="Tag 13",o={unversionedId:"M226A/theorie-doku/tag-0013",id:"M226A/theorie-doku/tag-0013",title:"Tag 13",description:"## Aggregation (Computerbauteile)",source:"@site/docs/M226A/theorie-doku/tag-0013.md",sourceDirName:"M226A/theorie-doku",slug:"/M226A/theorie-doku/tag-0013",permalink:"/docs/M226A/theorie-doku/tag-0013",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tag 12",permalink:"/docs/M226A/theorie-doku/tag-0012"},next:{title:"Tag 14",permalink:"/docs/M226A/theorie-doku/tag-0014"}},c={},u=[{value:"UML",id:"uml",level:3},{value:"Source Code",id:"source-code",level:3},{value:"Sequenz-Diagramm",id:"sequenz-diagramm",level:3}],k={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,i.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tag-13"},"Tag 13"),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"aggregation-computerbauteile"},"Aggregation (Computerbauteile)")),(0,r.kt)("h3",{id:"uml"},"UML"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plantuml"},'class PC {\n    - verweisAufDisk : Disk\n    + diskWechseln(Disk aDisk) : void\n    + PC(Disk vaufDisk)\n}\nclass Disk {\n    - eingebaut : Boolean\n    + einbau() : void\n    + ausbau() : void\n    + getStatus() : Boolean\n}\nPC "0..1" o-- "0..1" Disk\n')),(0,r.kt)("h3",{id:"source-code"},(0,r.kt)("a",{parentName:"h3",href:"/docs/M226A/praxis-doku/computerbauteile#source-code"},"Source Code")),(0,r.kt)("h3",{id:"sequenz-diagramm"},"Sequenz-Diagramm"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plantuml"},'participant "App"\nparticipant "disk01 : Disk"\nparticipant "disk02 : Disk"\nparticipant "pc01 : PC"\n\n"App" -> "disk01 : Disk" : new()\nactivate "disk01 : Disk"\ndeactivate "disk01 : Disk"\n\n"App" -> "disk02 : Disk" : new()\nactivate "disk02 : Disk"\ndeactivate "disk02 : Disk"\n\n"App" -> "pc01 : PC" : new(disk01)\nactivate "pc01 : PC"\n"pc01 : PC" -> "disk01 : Disk" : einbau()\nactivate "disk01 : Disk"\n"disk01 : Disk" -> "disk01 : Disk" : eingebaut = true\n"disk01 : Disk" -> "disk01 : Disk" : System.out.println("Festplatte wurde erfolgreich eingebaut.")\ndeactivate "disk01 : Disk"\ndeactivate "pc01 : PC"\n\n"App" -> "pc01 : PC" : diskWechseln(disk02)\nactivate "pc01 : PC"\n"pc01 : PC" -> "disk01 : Disk" : ausbau()\nactivate "disk01 : Disk"\n"disk01 : Disk" -> "disk01 : Disk" : eingebaut = false\n"disk01 : Disk" -> "disk01 : Disk" : System.out.println("Festplatte wurde erfolgreich ausgebaut.")\ndeactivate "disk01 : Disk"\n"pc01 : PC" -> "pc01 : PC" : verweisAufDisk = disk02\n"pc01 : PC" -> "disk02 : Disk" : einbau()\nactivate "disk02 : Disk"\n"disk02 : Disk" -> "disk02 : Disk" : eingebaut = true\n"disk02 : Disk" -> "disk02 : Disk" : System.out.println("Festplatte wurde erfolgreich eingebaut.")\ndeactivate "disk02 : Disk"\ndeactivate "pc01 : PC"\n\n"App" -> "disk01 : Disk" : getStatus()\nactivate "disk01 : Disk"\n"disk01 : Disk" -> "App" : return eingebaut\ndeactivate "disk01 : Disk"\n\n"App" -> "disk02 : Disk" : getStatus()\nactivate "disk02 : Disk"\n"disk02 : Disk" -> "App" : return eingebaut\ndeactivate "disk02 : Disk"\n')))}p.isMDXComponent=!0}}]);