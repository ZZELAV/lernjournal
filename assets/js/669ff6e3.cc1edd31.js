"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[16172],{2808:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>u,contentTitle:()=>c,default:()=>a,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var i=o(85893),r=o(11151);const t={},c="Dreieck & Viereck",d={id:"M226A/praxis-doku/dreieck-viereck",title:"Dreieck & Viereck",description:"## Source Code",source:"@site/docs/M226A/praxis-doku/dreieck-viereck.md",sourceDirName:"M226A/praxis-doku",slug:"/M226A/praxis-doku/dreieck-viereck",permalink:"/docs/M226A/praxis-doku/dreieck-viereck",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Computerbauteile",permalink:"/docs/M226A/praxis-doku/computerbauteile"},next:{title:"Konto",permalink:"/docs/M226A/praxis-doku/konto"}},u={},l=[{value:"Source Code",id:"source-code",level:2}];function s(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"dreieck--viereck",children:"Dreieck & Viereck"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.h2,{id:"source-code",children:"Source Code"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"package ch.zzelav;\n\npublic class App {\n    public static void main(String[] args) {\n\n        Point punktA = new Point(-100, 100);\n        Point punktB = new Point(53, -7);\n        Point punktC = new Point(38, -99);\n        Point punktD = new Point(-54, 87);\n\n        Dreieck d1 = new Dreieck(punktA, punktB, punktC);\n        Viereck v1 = new Viereck(punktA, punktB, punktC, punktD);\n    }\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"Point ... = new Point(...);"})," erzeugt neue Objekte mit jeweils 2 Parametern. Das Erzeugen der Objekte wird mithilfe eines Konstruktors gemacht. ",(0,i.jsx)(e.code,{children:"Dreieck d1 = new Dreieck(punktA, punktB, punktC);"})," und ",(0,i.jsx)(e.code,{children:"Viereck v1 = new Viereck(punktA, punktB, punktC, punktD);"})," setzt die Punkte zu einem Dreieck und Viereck zusammen."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'package ch.zzelav;\n\npublic class Point {\n    private double xCoor;\n    private double yCoor;\n\n    public Point(double x, double y) {\n        if(x >= -100 && x <= 100) {\n            xCoor = x;\n        }\n        else {\n            System.out.println("Ung\xfcltige Koordinate (x): " + x);\n        }\n\n        if(y >= -100 && y <= 100) {\n            yCoor = y;\n        }\n        else {\n            System.out.println("Ung\xfcltige Koordinate (y): " + y);\n        }\n    }\n\n    public void addToXCoor(int xCoor) {\n        xCoor += this.xCoor;\n    }\n\n    public void addToYCoor(int yCoor) {\n        yCoor += this.yCoor;\n    }\n\n    public void setXCoor(double xCoor) {\n        this.xCoor = xCoor;\n    }\n\n    public void setYCoor(double yCoor) {\n        this.yCoor = yCoor;\n    }\n\n    public void setPoint(double x, double y) {\n        if(x >= -100 && x <= 100) {\n            xCoor = x;\n        }\n        else {\n            System.out.println("Ung\xfcltige Koordinate (x): " + x);\n        }\n\n        if(y >= -100 && y <= 100) {\n            yCoor = y;\n        }\n        else {\n            System.out.println("Ung\xfcltige Koordinate (y): " + y);\n        }\n    }\n\n    public double getXCoor() {\n        return this.xCoor;\n    }\n\n    public double getYCoor() {\n        return this.yCoor;\n    }\n\n    public String getPoint() {\n        return xCoor + ", " + yCoor;\n    }\n\n}\n'})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"public Point(double x, double y)"})," ist der Konstruktor. Er kann 2 doubles aufnehmen und diese werden in ",(0,i.jsx)(e.code,{children:"xCoor"})," und ",(0,i.jsx)(e.code,{children:"yCoor"})," gespeichert. ",(0,i.jsx)(e.code,{children:"public void addToXCoor(int xCoor)"})," und ",(0,i.jsx)(e.code,{children:"public void addToYCoor(int yCoor)"})," rechnet den alten und den neuen Wert zusammen und speichert ihn in ",(0,i.jsx)(e.code,{children:"xCoor"}),"/",(0,i.jsx)(e.code,{children:"yCoor"}),". ",(0,i.jsx)(e.code,{children:"public void setXCoor(double xCoor)"})," und ",(0,i.jsx)(e.code,{children:"public void setYCoor(double yCoor)"})," setzen den Wert von ",(0,i.jsx)(e.code,{children:"xCoor"}),"/",(0,i.jsx)(e.code,{children:"yCoor"}),". Die Funktion ",(0,i.jsx)(e.code,{children:"public void setPoint(double x, double y)"})," setzt beide Koordinaten, wie der Konstruktor. ",(0,i.jsx)(e.code,{children:"public double getXCoor()"})," gibt den Wert von ",(0,i.jsx)(e.code,{children:"xCoor"})," zur\xfcck und ",(0,i.jsx)(e.code,{children:"public double getYCoor()"})," den Wert von ",(0,i.jsx)(e.code,{children:"yCoor"}),". Die letze Funktion ",(0,i.jsx)(e.code,{children:"public String getPoint()"})," f\xfcgt beide Koordinaten zusammen und gibt diese als String aus. Beim Konstruktor und ",(0,i.jsx)(e.code,{children:"setPoint"})," wird \xfcberpr\xfcft ob die Koordinaten kleiner -100 und gr\xf6sser 100 sind. Ist das der Fall wird eine Fehlermeldung ausgegeben und die Koordinate wird nicht gespeichert."]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"package ch.zzelav;\n\npublic class Dreieck {\n\n    private Point a;\n    private Point b;\n    private Point c;\n\n    public Dreieck(Point pA, Point pB, Point pC) {\n        a = pA;\n        b = pB;\n        c = pC;\n    }\n\n    public boolean verify() {\n        if (a != null || b != null || c != null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    public void setA(Point a) {\n        this.a = a;\n    }\n\n    public void setB(Point b) {\n        this.b = b;\n    }\n\n    public void setC(Point c) {\n        this.c = c;\n    }\n\n    public Point getA() {\n        return a;\n    }\n\n    public Point getB() {\n        return b;\n    }\n\n    public Point getC() {\n        return c;\n    }\n}\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"package ch.zzelav;\n\npublic class Viereck {\n\n    private Point a;\n    private Point b;\n    private Point c;\n    private Point d;\n\n    public Viereck(Point pA, Point pB, Point pC, Point pD) {\n        a = pA;\n        b = pB;\n        c = pC;\n        d = pD;\n    }\n\n    public boolean verify() {\n        if (a != null || b != null || c != null || d != null) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    public void setA(Point a) {\n        this.a = a;\n    }\n\n    public void setB(Point b) {\n        this.b = b;\n    }\n\n    public void setC(Point c) {\n        this.c = c;\n    }\n\n    public void setD(Point d) {\n        this.d = d;\n    }\n\n    public Point getA() {\n        return a;\n    }\n\n    public Point getB() {\n        return b;\n    }\n\n    public Point getC() {\n        return c;\n    }\n\n    public Point getD() {\n        return d;\n    }\n}\n"})}),"\n",(0,i.jsxs)(e.p,{children:["Die Konstruktor ",(0,i.jsx)(e.code,{children:"Dreieck"})," und ",(0,i.jsx)(e.code,{children:"Viereck"})," hat drei/vier \xdcbergabeparameter. Die Funktion ",(0,i.jsx)(e.code,{children:"verify()"})," \xfcberpr\xfcft, ob die Punkte nicht ",(0,i.jsx)(e.code,{children:"NULL"})," sind."]})]})}function a(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(s,{...n})}):s(n)}},11151:(n,e,o)=>{o.d(e,{Z:()=>d,a:()=>c});var i=o(67294);const r={},t=i.createContext(r);function c(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:c(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);