"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4686],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>k});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=c(t),u=a,k=d["".concat(p,".").concat(u)]||d[u]||m[u]||i;return t?r.createElement(k,l(l({ref:n},s),{},{components:t})):r.createElement(k,l({ref:n},s))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=u;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9675:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={title:"Tag 15",tags:["M239","Tag 15","Server","Docker","LAMP"]},l="Tag 15: LAMP mit Docker",o={unversionedId:"M239/tag-0015",id:"M239/tag-0015",title:"Tag 15",description:"1 \xdcbung 1",source:"@site/docs/M239/tag-0015.md",sourceDirName:"M239",slug:"/M239/tag-0015",permalink:"/docs/M239/tag-0015",draft:!1,tags:[{label:"M239",permalink:"/docs/tags/m-239"},{label:"Tag 15",permalink:"/docs/tags/tag-15"},{label:"Server",permalink:"/docs/tags/server"},{label:"Docker",permalink:"/docs/tags/docker"},{label:"LAMP",permalink:"/docs/tags/lamp"}],version:"current",frontMatter:{title:"Tag 15",tags:["M239","Tag 15","Server","Docker","LAMP"]},sidebar:"tutorialSidebar",previous:{title:"Tag 14",permalink:"/docs/M239/tag-0014"},next:{title:"Tag 16",permalink:"/docs/M239/tag-0016"}},p={},c=[{value:"1 \xdcbung 1",id:"1-\xfcbung-1",level:2},{value:"1.1 Schritt 1: Aufbauen der Struktur",id:"11-schritt-1-aufbauen-der-struktur",level:3},{value:"1.2 Schritt 2: Ports und Networks",id:"12-schritt-2-ports-und-networks",level:3},{value:"1.3 Schritt 3: Volumes",id:"13-schritt-3-volumes",level:3},{value:"1.4 Schritt 4: Konfigurationen f\xfcr die Container",id:"14-schritt-4-konfigurationen-f\xfcr-die-container",level:3},{value:"1.5 Schritt 5: Dockerfiles erstellen",id:"15-schritt-5-dockerfiles-erstellen",level:3},{value:"1.6 Schritt 6: Vorbereitung der Testumgebung",id:"16-schritt-6-vorbereitung-der-testumgebung",level:3},{value:"1.7 Schritt 7: Starten der Applikation und Testing",id:"17-schritt-7-starten-der-applikation-und-testing",level:3}],s={toc:c};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tag-15-lamp-mit-docker"},"Tag 15: LAMP mit Docker"),(0,a.kt)("h2",{id:"1-\xfcbung-1"},"1 \xdcbung 1"),(0,a.kt)("h3",{id:"11-schritt-1-aufbauen-der-struktur"},"1.1 Schritt 1: Aufbauen der Struktur"),(0,a.kt)("admonition",{title:"Auftrag",type:"note"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Erstellen Sie auf Ihrer VM ein Verzeichnis mit dem Namen ",(0,a.kt)("inlineCode",{parentName:"li"},"dockerComposeTest")),(0,a.kt)("li",{parentName:"ol"},"Platzieren Sie darin ein ",(0,a.kt)("inlineCode",{parentName:"li"},"docker-compose.yml")),(0,a.kt)("li",{parentName:"ol"},"Erstellen Sie nun noch die Verzeichnisse apache, php und mysql."))),(0,a.kt)("p",null,"Neues Verzeichnis erstellen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cmd"},"mkdir dockerComposeTest\ncd dockerComposeTest\n")),(0,a.kt)("p",null,"docker-compose.yml erstellen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cmd"},"vim docker-compose.yml\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="docker-compose.yml"',title:'"docker-compose.yml"'},"version: \"3.0\"\n\nservices:\n  apache:\n    build: './apache'\n  php:\n    build: './php'\n  mysql:\n    build: './mysql'\n")),(0,a.kt)("p",null,"Apache, PHP und MySQL Verzeichnisse erstellen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cmd"},"mkdir apache\nmkdir php\nmkdir mysql\n")),(0,a.kt)("h3",{id:"12-schritt-2-ports-und-networks"},"1.2 Schritt 2: Ports und Networks"),(0,a.kt)("admonition",{title:"Auftrag",type:"note"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Erstellen Sie die Port-Weiterleitungen"),(0,a.kt)("li",{parentName:"ol"},"Definieren Sie ein Backend und Frontend Netzwerk mit den entsprechenden Verbindungen"))),(0,a.kt)("p",null,"Port-Weiterleitung einrichten & Netzwerke definieren:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="docker-compose.yml"',title:'"docker-compose.yml"'},"version: \"3.0\"\n\nservices:\n  apache:\n    build: './apache'\n    ports:\n      - 8085:80\n    networks:\n      - frontend\n      - backend\n    depends_on:\n      - php\n      - mysql\n  php:\n    build: './php'\n    networks:\n      - backend\n  mysql:\n    build: './mysql'\n    networks:\n      - backend\nnetworks:\n  backend:\n  frontend:\n")),(0,a.kt)("h3",{id:"13-schritt-3-volumes"},"1.3 Schritt 3: Volumes"),(0,a.kt)("admonition",{title:"Auftrag",type:"note"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Mounten Sie die Webverzeichnisse in den Container apache:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"public_html")," nach ",(0,a.kt)("inlineCode",{parentName:"li"},"/usr/local/apache2/htdocs")))),(0,a.kt)("li",{parentName:"ol"},"Mounten Sie die Webverzeichnisse in den Container php:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"public_html")," nach ",(0,a.kt)("inlineCode",{parentName:"li"},"/usr/local/apache2/htdocs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tmp")," nach ",(0,a.kt)("inlineCode",{parentName:"li"},"/usr/local/tmp")))),(0,a.kt)("li",{parentName:"ol"},"Mounten Sie das Datenbankverzeichnis in den Container mysql:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"database")," nach ",(0,a.kt)("inlineCode",{parentName:"li"},"/var/lib/mysql")))))),(0,a.kt)("p",null,"Verzeichnisse erstellen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cmd"},"mkdir public_html\nmkdir tmp\nmkdir database\n")),(0,a.kt)("p",null,"Verzeichnisse mounten:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="docker-compose.yml"',title:'"docker-compose.yml"'},"version: \"3.0\"\n\nservices:\n  apache:\n    build: './apache'\n    ports:\n      - 8085:80\n    networks:\n      - frontend\n      - backend\n    depends_on:\n      - php\n      - mysql\n    volumes:\n      - ./public_html:/usr/local/apache2/htdocs\n  php:\n    build: './php'\n    networks:\n      - backend\n    volumes:\n      - ./public_html:/usr/local/apache2/htdocs\n      - ./tmp:/usr/local/tmp\n  mysql:\n    build: './mysql'\n    networks:\n      - backend\n    volumes:\n      - ./database:/var/lib/mysql\nnetworks:\n  backend:\n  frontend:\n")),(0,a.kt)("h3",{id:"14-schritt-4-konfigurationen-f\xfcr-die-container"},"1.4 Schritt 4: Konfigurationen f\xfcr die Container"),(0,a.kt)("admonition",{title:"Auftrag",type:"note"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Die Container apache und mysql m\xfcssen noch beim Erstellen definierte Konfigurationen durchlaufen. Erstellen Sie also bitte folgende Konfigrationsdateien im Verzeichnis:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Im Verzeichnis apache die Datei apache.conf erstellen"),(0,a.kt)("li",{parentName:"ul"},"Im Verzeichnis mysql die Datei my.cnf erstellen"),(0,a.kt)("li",{parentName:"ul"},"Im Verzeichnis php die Datei php.ini erstellen"))))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/appendix/M239/docker_compose_konfigurationen#apacheapacheconf"},"Konfiguration Apache")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/appendix/M239/docker_compose_konfigurationen#mysqlmycnf"},"Konfiguration MySQL")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/appendix/M239/docker_compose_konfigurationen#phpphpini"},"Konfiguration PHP")),(0,a.kt)("h3",{id:"15-schritt-5-dockerfiles-erstellen"},"1.5 Schritt 5: Dockerfiles erstellen"),(0,a.kt)("admonition",{title:"Auftrag",type:"note"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Damit nun alle Container nach unseren Vorstellungen gebaut werden, m\xfcssen noch f\xfcr jeden Container ein Dockerfile erstellt werden."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="./apache/Dockerfile"',title:'"./apache/Dockerfile"'},"FROM httpd:2.4.35-alpine\nRUN apk update; \\\n    apk upgrade;\nCOPY ./apache.conf /usr/local/apache2/conf/httpd.conf\nEXPOSE 80\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="./mysql/Dockerfile"',title:'"./mysql/Dockerfile"'},"FROM mysql:8.0.13\nENV MYSQL_ROOT_PASSWORD <password>\nCOPY my.cnf /etc/mysql/\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="./php/Dockerfile"',title:'"./php/Dockerfile"'},"FROM php:7.3-rc-fpm-alpine\nRUN apk update; \\\n    apk upgrade;\nRUN docker-php-ext-install mysqli\nRUN apk add freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev\nRUN docker-php-ext-install -j$(nproc) iconv \nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \nRUN docker-php-ext-install -j$(nproc) gd\nCOPY php.ini /usr/local/etc/php/php.ini\n")),(0,a.kt)("h3",{id:"16-schritt-6-vorbereitung-der-testumgebung"},"1.6 Schritt 6: Vorbereitung der Testumgebung"),(0,a.kt)("admonition",{title:"Auftrag",type:"note"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Erstellen Sie im Verzeichnis public_html die folgenden beiden Dateien:\nindex.html\nindex.php"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/appendix/M239/docker_compose_konfigurationen#indexhtml"},"index.html")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/appendix/M239/docker_compose_konfigurationen#indexphp"},"index.php")),(0,a.kt)("h3",{id:"17-schritt-7-starten-der-applikation-und-testing"},"1.7 Schritt 7: Starten der Applikation und Testing"),(0,a.kt)("admonition",{title:"Auftrag",type:"note"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Starten Sie nun die Applikation \xfcber den geeigneten Docker-Compose-Befehl"),(0,a.kt)("li",{parentName:"ol"},"Verifizieren Sie nun, ob die Aufrufe auf index.html und index.php von verschiedenen Containern beantwortet wird (Tip: Logging beachten!)"))),(0,a.kt)("p",null,"Docker-Compose starten:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cmd"},"docker-compose up\n")))}d.isMDXComponent=!0}}]);