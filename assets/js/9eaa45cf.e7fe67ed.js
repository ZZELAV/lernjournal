"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[16925],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>g});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=a.createContext({}),l=function(t){var e=a.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},p=function(t){var e=l(t.components);return a.createElement(c.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,c=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),u=l(n),m=r,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(g,s(s({ref:e},p),{},{components:n})):a.createElement(g,s({ref:e},p))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o[u]="string"==typeof t?t:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},59726:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const i={},s="List, Set & Map",o={unversionedId:"M226A/praxis-doku/list-set-map",id:"M226A/praxis-doku/list-set-map",title:"List, Set & Map",description:"## ArrayList",source:"@site/docs/M226A/praxis-doku/list-set-map.md",sourceDirName:"M226A/praxis-doku",slug:"/M226A/praxis-doku/list-set-map",permalink:"/docs/M226A/praxis-doku/list-set-map",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Konto",permalink:"/docs/M226A/praxis-doku/konto"},next:{title:"Maven",permalink:"/docs/M226A/praxis-doku/maven"}},c={},l=[],p={toc:l},u="wrapper";function d(t){let{components:e,...n}=t;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"list-set--map"},"List, Set & Map"),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"arraylist"},"ArrayList")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.ArrayList;\n\npublic class Main {\n    public static void main(String[] args) {\n        ArrayList<String> cars = new ArrayList<String>();\n\n        cars.add("Volvo");\n        cars.add("BMW");\n        cars.add("Ford");\n        cars.add("Mazda");\n        System.out.println(cars);\n\n        cars.get(0);\n        cars.set(0, "Opel");\n        cars.remove(0);\n        cars.clear();\n        cars.size();\n    }\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"linkedlist"},"LinkedList")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.LinkedList;\n\npublic class Main {\n    public static void main(String[] args) {\n        LinkedList<String> cars = new LinkedList<String>();\n\n        cars.add("Volvo");\n        cars.add("BMW");\n        cars.add("Ford");\n        cars.add("Mazda");\n        System.out.println(cars);\n\n        cars.addFirst("Porsche");\n        cars.addLast("Porsche");\n        cars.removeFirst();\n        cars.removeLast();\n        cars.getFirst();\n        cars.getLast();\n    }\n}\n')),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"hashset"},"HashSet")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.HashSet;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashSet<String> cars = new HashSet<String>();\n\n        cars.add("Volvo");\n        cars.add("BMW");\n        cars.add("Ford");\n        cars.add("BMW");\n        cars.add("Mazda");\n        System.out.println(cars);\n\n        cars.contains("Mazda");\n        cars.remove("Volvo");\n        cars.clear();\n        cars.size();\n    }\n}\n\n')),(0,r.kt)("blockquote",null,(0,r.kt)("h2",{parentName:"blockquote",id:"hashmap"},"HashMap")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.util.HashMap;\n\npublic class Main {\n    public static void main(String[] args) {\n        HashMap<String, String> capitalCities = new HashMap<String, String>();\n\n        capitalCities.put("England", "London");\n        capitalCities.put("Germany", "Berlin");\n        capitalCities.put("Norway", "Oslo");\n        capitalCities.put("USA", "Washington DC");\n        System.out.println(capitalCities);\n\n        capitalCities.get("England");\n        capitalCities.remove("England");\n        capitalCities.clear();\n        capitalCities.size();\n    }\n}\n')))}d.isMDXComponent=!0}}]);