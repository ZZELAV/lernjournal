"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2552],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(n),c=a,k=d["".concat(i,".").concat(c)]||d[c]||m[c]||o;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=c;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[d]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},17558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={title:"Tag 5",tags:["M141","Tag 5","Datenbanksysteme","Import","Export","Backup","Restore","Migration"]},l="Tag 5",p={unversionedId:"M141/tag-0005",id:"M141/tag-0005",title:"Tag 5",description:"1 Dokumentationsauftr\xe4ge",source:"@site/docs/M141/tag-0005.md",sourceDirName:"M141",slug:"/M141/tag-0005",permalink:"/docs/M141/tag-0005",draft:!1,tags:[{label:"M141",permalink:"/docs/tags/m-141"},{label:"Tag 5",permalink:"/docs/tags/tag-5"},{label:"Datenbanksysteme",permalink:"/docs/tags/datenbanksysteme"},{label:"Import",permalink:"/docs/tags/import"},{label:"Export",permalink:"/docs/tags/export"},{label:"Backup",permalink:"/docs/tags/backup"},{label:"Restore",permalink:"/docs/tags/restore"},{label:"Migration",permalink:"/docs/tags/migration"}],version:"current",frontMatter:{title:"Tag 5",tags:["M141","Tag 5","Datenbanksysteme","Import","Export","Backup","Restore","Migration"]},sidebar:"tutorialSidebar",previous:{title:"Tag 4",permalink:"/docs/M141/tag-0004"},next:{title:"Tag 6",permalink:"/docs/M141/tag-0006"}},i={},s=[{value:"1 Dokumentationsauftr\xe4ge",id:"1-dokumentationsauftr\xe4ge",level:2},{value:"1.1 Datentypen recherchiert",id:"11-datentypen-recherchiert",level:3},{value:"1.2 Indexierungstypen recherchiert",id:"12-indexierungstypen-recherchiert",level:3},{value:"2 \xdcbungen",id:"2-\xfcbungen",level:2},{value:"2.1 SQL Import",id:"21-sql-import",level:3},{value:"2.2 CSV Export (Select)",id:"22-csv-export-select",level:3},{value:"2.3 Lokales Backup",id:"23-lokales-backup",level:3},{value:"2.4 mydumper und myloader",id:"24-mydumper-und-myloader",level:3},{value:"2.5 Migration auf entfernten Server",id:"25-migration-auf-entfernten-server",level:3}],u={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tag-5"},"Tag 5"),(0,a.kt)("h2",{id:"1-dokumentationsauftr\xe4ge"},"1 Dokumentationsauftr\xe4ge"),(0,a.kt)("h3",{id:"11-datentypen-recherchiert"},"1.1 Datentypen recherchiert"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/M141/tag-0004#213-datentypen--attribute"},"Tag 4 - Kapitel 2.1.3")),(0,a.kt)("h3",{id:"12-indexierungstypen-recherchiert"},"1.2 Indexierungstypen recherchiert"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/M141/tag-0004#214-indexierung"},"Tag 4 - Kapitel 2.1.4")),(0,a.kt)("h2",{id:"2-\xfcbungen"},"2 \xdcbungen"),(0,a.kt)("h3",{id:"21-sql-import"},"2.1 SQL Import"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Importieren Sie den SQL-Dump in Ihr DBMS")),(0,a.kt)("p",null,"Datenbank erstellen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE poke_db;\n")),(0,a.kt)("p",null,"Import durchf\xfchren (ausserhalb MySQL Server):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"sudo mysql -u root -p poke_db < poke_db.sql\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Kontrollieren Sie ob der Import erfolgreich war")),(0,a.kt)("p",null,"Sind die Tabellen erstellt?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"USE poke_db;\nSHOW TABLES;\n")),(0,a.kt)("p",null,"Datenstruktur von einer Tabelle \xfcberpr\xfcfen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"DESCRIBE abilities;\n")),(0,a.kt)("p",null,"Daten in Tabelle \xfcberp\xfcfen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM pokemon LIMIT 5;\n")),(0,a.kt)("h3",{id:"22-csv-export-select"},"2.2 CSV Export (Select)"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},'Exportieren Sie eine CSV-Datei aus allen Pokemons, die einen "fire-punch" als Move durchf\xfchren k\xf6nnen')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT p.pok_name\nFROM pokemon p\nJOIN pokemon_moves pm ON p.pok_id=pm.pok_id\nJOIN moves m ON pm.move_id=m.move_id\nWHERE m.move_name\nLIKE \"fire-punch\"\nINTO OUTFILE '/var/lib/mysql-files/poke_fire-punch.csv'\nFIELDS ENCLOSED BY '\"'\nTERMINATED BY ';'\nLINES TERMINATED BY '\\n';\n")),(0,a.kt)("h3",{id:"23-lokales-backup"},"2.3 Lokales Backup"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},'Richten Sie auf Ihrem Server ein Backup-Script, gem\xe4ss der Vorlage, ein. Testen Sie das Script aus ob der Export funktioniert und Sie die Daten auch wieder importieren k\xf6nnen ("Niemand will Backup - alle wollen restore")')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n# Add the backup dir location, MySQL root password, MySQL and mysqldump location\nDATE=$(date +%d-%m-%Y)\nBACKUP_DIR="/tmp/test-backup"\nMYSQL_USER=\'root\'\nMYSQL_PASSWORD=\'MySQL_M141#\'\nMYSQL=/usr/bin/mysql\nMYSQLDUMP=/usr/bin/mysqldump\n\n# To create a new directory in the backup directory location based on the date\nmkdir -p $BACKUP_DIR/$DATE\n\n# To get a list of databases\ndatabases=`$MYSQL -u$MYSQL_USER -p$MYSQL_PASSWORD -e "SHOW DATABASES;" | grep -Ev "(Database|information_schema)"`\n\n# To dump each database in a separate file\nfor db in $databases; do\necho $db\n$MYSQLDUMP --single-transaction --force --opt --skip-lock-tables --user=$MYSQL_USER -p$MYSQL_PASSWORD --databases $db | gzip > "$BACKUP_DIR/$DATE/$db.sql.gz"\ndone\n\n# Delete the files older than 10 days\nfind $BACKUP_DIR/* -mtime +10 -exec rm {} \\;\n')),(0,a.kt)("p",null,"Import testen (Datebank zerst\xf6ren (z.B. l\xf6schen)):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"cp /tmp/test-backup/DATE/demo_db.sql.gz ~\ngzip -d demo_db.sql.gz\nsudo mysql -u root -p < demo_db.sql\n")),(0,a.kt)("h3",{id:"24-mydumper-und-myloader"},"2.4 mydumper und myloader"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"mydumper")," und ",(0,a.kt)("inlineCode",{parentName:"p"},"myloader")," installieren:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"wget https://github.com/mydumper/mydumper/releases/download/v0.12.1/mydumper_0.12.1-1-zstd.focal_amd64.deb\nsudo dpkg -i mydumper_0.12.1-1-zstd.focal_amd64.deb\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"F\xfchren Sie mittels mydumper ein DB-Backup von Ihrem Pokemon-Datenbank durch. Achtung:"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"- Benutzen Sie f\xfcr das Backup 6 parallele Threads"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"- Komprimieren Sie das Backup")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo mydumper --database poke_db -c --threads 6\nsudo chown -R vagrant:vagrant EXPORT-FOLDER\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"L\xf6schen Sie die orginale DB")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"DROP DATABASE poke_db;\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Restoren Sie die DB aus Ihrem Backup")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo myloader -d EXPORT-FOLDER --threads 6 -v 3\n")),(0,a.kt)("h3",{id:"25-migration-auf-entfernten-server"},"2.5 Migration auf entfernten Server"),(0,a.kt)("admonition",{title:"Vorbereitung",type:"note"},(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"Erstellen Sie einen Klon Ihrer MySQL-VM mit neuen MAC-Adressen"),(0,a.kt)("li",{parentName:"ol"},"Verbinden Sie die orginale VM mit der geklonten VM in einem NAT-Network <- Testen Sie die Verbindung untereinander"),(0,a.kt)("li",{parentName:"ol"},"Testen Sie die SSH-Verbindung zwischen den VMs"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},'F\xfchren Sie einen entfernten Backup mittels SSH, gem\xe4ss den Anleitung von oben, durch. Nutzen Sie das Beispiel "Verbindung zwischen den Servern per SSH m\xf6glich".')),(0,a.kt)("admonition",{title:"Schrittweises Vorgehen:",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"SSH auf den Export-Server Dump durchf\xfchren und Ausabe auf PIPE umleiten die PIPE umleiten auf die SSH-Verbindung zum Import-Server")),(0,a.kt)("p",null,"Auf Export-Server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo mysqldump --single-transaction -u root -pMySQL_M141# poke_db | ssh vagrant@10.0.2.15 'sudo mysql -u root -pMySQL_M141# -e \"CREATE DATABASE poke_db\"; sudo mysql -u root -pMySQL_M141# poke_db'\n")))}m.isMDXComponent=!0}}]);