"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[69535],{42365:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>u,metadata:()=>a,toc:()=>l});var t=r(85893),i=r(11151);const u={},s="Tag 11",a={id:"M226A/theorie-doku/tag-0011",title:"Tag 11",description:"## MuKi",source:"@site/docs/M226A/theorie-doku/tag-0011.md",sourceDirName:"M226A/theorie-doku",slug:"/M226A/theorie-doku/tag-0011",permalink:"/docs/M226A/theorie-doku/tag-0011",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tag 10",permalink:"/docs/M226A/theorie-doku/tag-0010"},next:{title:"Tag 12",permalink:"/docs/M226A/theorie-doku/tag-0012"}},d={},l=[{value:"MuKi",id:"muki",level:2},{value:"Kontrollfragen und Auftr\xe4ge",id:"kontrollfragen-und-auftr\xe4ge",level:2},{value:"Erstellen Sie eine eigene Zeichnung mit den Referenzen, \xe4hnlich zur gezeigten Darstellung",id:"erstellen-sie-eine-eigene-zeichnung-mit-den-referenzen-\xe4hnlich-zur-gezeigten-darstellung",level:3},{value:"Experimentieren Sie: Neue Kinder, neue M\xfctter, neue Zuweisungen. K\xf6nnen Sie zwei M\xfcttern ein Kind zuweisen?",id:"experimentieren-sie-neue-kinder-neue-m\xfctter-neue-zuweisungen-k\xf6nnen-sie-zwei-m\xfcttern-ein-kind-zuweisen",level:3},{value:"Was geschieht, wenn man zwei M\xfcttern das gleiche Kind zuweist? Warum? Geht es?",id:"was-geschieht-wenn-man-zwei-m\xfcttern-das-gleiche-kind-zuweist-warum-geht-es",level:3},{value:"B\xfccherei",id:"b\xfccherei",level:2},{value:"Von wem sollen die Methoden <code>ausleihen()</code> und <code>zurueck()</code> aufgerufen werden? Was macht Sinn?",id:"von-wem-sollen-die-methoden-ausleihen-und-zurueck-aufgerufen-werden-was-macht-sinn",level:3},{value:"Wie kontrollieren Sie, ob ein Buch bereits ausgeliehen ist?",id:"wie-kontrollieren-sie-ob-ein-buch-bereits-ausgeliehen-ist",level:3},{value:"Erstellen Sie ein Klassendiagramm f\xfcr den Kunden",id:"erstellen-sie-ein-klassendiagramm-f\xfcr-den-kunden",level:3}];function o(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"tag-11",children:"Tag 11"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.h2,{id:"muki",children:"MuKi"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class Mutter\r\n{\r\n    /**\r\n    * refKindist eine Referenzvariable vom Typ Kind.\r\n    * Sie muss auf etwas zeigen, hier eben auf null\r\n    */\r\n    private Kind refKind = null;\r\n    // Eine normale Wertvariable\r\n    private int alterMutter = 18;\r\n    /**\r\n    * refKind wird auf das Kind gesetzt\r\n    * also auf das Kind, welches zur Mutter geh\xf6rt!*/\r\n\r\n    public void setIhrKind(Kind refKind)\r\n    {\r\n        this.refKind = refKind;\r\n    }\r\n\r\n    public Kind getIhrKind()\r\n    {\r\n        return refKind;\r\n        /* Hinweis: Man erh\xe4lt eine etwas komische Ausgabe,\r\n        * den von einer oberen Klasse abgeleiteten Hashwert.\r\n        * Wir sagen dem hier einfach anschaulich Adresse*/\r\n    }\r\n\r\n    public void setAlterMutter(int alterMutter)\r\n    {\r\n        this.alterMutter = alterMutter;\r\n    }\r\n    public int getAlterMutter()\r\n    {\r\n        return alterMutter;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class Kind\r\n{\r\n    /**\r\n    * DasKind hat noch keine Kenntnis von Mutter,\r\n    * zeigt auf null\r\n    */\r\n    private Mutter refMutter = null;\r\n    // Normale Wertvariable\r\n    private int geburtsJahr= 0;\r\n    /**\r\n    * Es findet eine Parameter\xfcbergabe statt.\r\n    * Die Klasse Kind macht einen Verweis zur Mutter.\r\n    * Das Kind kennt nun seine Mutter.\r\n    */\r\n    public void setSeineMutter(Mutter refMutter)\r\n    {\r\n        this.refMutter = refMutter;\r\n    }\r\n    public Mutter getSeineMutter()\r\n    {\r\n        return refMutter;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'public class MainMuKi\r\n{\r\n    public static void main(String[] args)\r\n    {\r\n        // Es werden konkrete Objekte (Instanzen) erzeugt\r\n        Mutter frauMu = new Mutter();\r\n        Kind claudia = new Kind();\r\n        // Setzen des Alters der Instanz frauMu\r\n        frauMu.setAlterMutter(28);\r\n        // frauMu bekommt Claudia zeigt auf Instanz Claudia\r\n        frauMu.setIhrKind(claudia);\r\n        // Kind Claudia zeigt auf frauMu, also das Kind von frauMu\r\n        claudia.setSeineMutter(frauMu);\r\n        System.out.println("frauMu mit Tochter Claudia");\r\n        System.out.println("Quasi Adresse des Kindes von frauMu: " + frauMu.getIhrKind());\r\n\r\n        System.out.println("Quasi Adresse der Mutter von Claudia: " + claudia.getSeineMutter());\r\n\r\n        System.out.println("Alter der Mutter von Claudia: " + frauMu.getAlterMutter());\r\n    }\r\n}\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.h2,{id:"kontrollfragen-und-auftr\xe4ge",children:"Kontrollfragen und Auftr\xe4ge"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"erstellen-sie-eine-eigene-zeichnung-mit-den-referenzen-\xe4hnlich-zur-gezeigten-darstellung",children:"Erstellen Sie eine eigene Zeichnung mit den Referenzen, \xe4hnlich zur gezeigten Darstellung"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plantuml",children:"\r\nclass Mutter {\r\n}\r\n\r\nclass Kind {\r\n}\r\n\r\nMutter <--\x3e Kind\n"})}),"\n",(0,t.jsx)(n.h3,{id:"experimentieren-sie-neue-kinder-neue-m\xfctter-neue-zuweisungen-k\xf6nnen-sie-zwei-m\xfcttern-ein-kind-zuweisen",children:"Experimentieren Sie: Neue Kinder, neue M\xfctter, neue Zuweisungen. K\xf6nnen Sie zwei M\xfcttern ein Kind zuweisen?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'    Kind fritz = new Kind();\r\n    Kind anna = new Kind();\r\n    Mutter frauA = new Mutter();\r\n    Mutter frauB = new Mutter();\r\n    Mutter frauC = new Mutter();\r\n\r\n    frauA.setAlterMutter(31);\r\n    frauB.setAlterMutter(36);\r\n    frauC.setAlterMutter(29);\r\n\r\n    frauA.setIhrKind(fritz);\r\n    frauB.setIhrKind(fritz);\r\n    frauC.setIhrKind(anna);\r\n\r\n    fritz.setSeineMutter(frauA);\r\n    System.out.println("frauA mit Sohn Fritz");\r\n    System.out.println("Quasi Adresse des Kindes von frauA: " + frauA.getIhrKind());\r\n\r\n    System.out.println("Quasi Adresse der Mutter von Fritz: " + fritz.getSeineMutter());\r\n\r\n    System.out.println("Alter der Mutter von Fritz: " + frauA.getAlterMutter());\r\n\r\n    fritz.setSeineMutter(frauB);\r\n    System.out.println("frauB mit Sohn Fritz");\r\n    System.out.println("Quasi Adresse des Kindes von frauB: " + frauB.getIhrKind());\r\n\r\n    System.out.println("Quasi Adresse der Mutter von Fritz: " + fritz.getSeineMutter());\r\n\r\n    System.out.println("Alter der Mutter von Fritz: " + frauB.getAlterMutter());\r\n\r\n    anna.setSeineMutter(frauC);\r\n    System.out.println("frauC mit Tochter Anna");\r\n    System.out.println("Quasi Adresse des Kindes von frauC: " + frauC.getIhrKind());\r\n\r\n    System.out.println("Quasi Adresse der Mutter von Anna: " + anna.getSeineMutter());\r\n\r\n    System.out.println("Alter der Mutter von Anna: " + frauC.getAlterMutter());\n'})}),"\n",(0,t.jsx)(n.p,{children:"Ja, man kann zwei M\xfcttern ein Kind zuweisen."}),"\n",(0,t.jsx)(n.h3,{id:"was-geschieht-wenn-man-zwei-m\xfcttern-das-gleiche-kind-zuweist-warum-geht-es",children:"Was geschieht, wenn man zwei M\xfcttern das gleiche Kind zuweist? Warum? Geht es?"}),"\n",(0,t.jsx)(n.p,{children:"Man kann zwei M\xfcttern das gleiche Kind ohne Fehler zuweisen. Da zuerst die eine Mutter gesetzt wird und danach die zweite. Sobald die zweite gesetzt wurde vergisst das Kind seine erste Mutter."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.h2,{id:"b\xfccherei",children:"B\xfccherei"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"von-wem-sollen-die-methoden-ausleihen-und-zurueck-aufgerufen-werden-was-macht-sinn",children:["Von wem sollen die Methoden ",(0,t.jsx)(n.code,{children:"ausleihen()"})," und ",(0,t.jsx)(n.code,{children:"zurueck()"})," aufgerufen werden? Was macht Sinn?"]}),"\n",(0,t.jsxs)(n.p,{children:["Am meisten Sinn macht es wenn die Methoden auf ",(0,t.jsx)(n.code,{children:"public"})," sind. Damit kann von der ",(0,t.jsx)(n.code,{children:"App"}),"-Klasse zugegriffen werden."]}),"\n",(0,t.jsx)(n.h3,{id:"wie-kontrollieren-sie-ob-ein-buch-bereits-ausgeliehen-ist",children:"Wie kontrollieren Sie, ob ein Buch bereits ausgeliehen ist?"}),"\n",(0,t.jsxs)(n.p,{children:["Indem man die Methode ",(0,t.jsx)(n.code,{children:"getStatus()"})," aufruft."]}),"\n",(0,t.jsx)(n.h3,{id:"erstellen-sie-ein-klassendiagramm-f\xfcr-den-kunden",children:"Erstellen Sie ein Klassendiagramm f\xfcr den Kunden"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plantuml",children:"class Kunde {\r\n    - name : String\r\n    + buchLeihen(String buch) : void\r\n    + buchZurueck(String buch) : void\r\n    + ListeAusgeben() : void\r\n    + getName() : String\r\n    + setName(String name) : void\r\n}\n"})})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>s});var t=r(67294);const i={},u=t.createContext(i);function s(e){const n=t.useContext(u);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(u.Provider,{value:n},e.children)}}}]);